import java.util.Scanner;

// Class to represent the user's bank account
class BankAccount {
    private double balance;

    // Constructor to initialize the bank account with a starting balance
    public BankAccount(double initialBalance) {
        this.balance = initialBalance;
    }

    // Method to deposit money into the account
    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("₹" + amount + " has been successfully deposited.");
        } else {
            System.out.println("Invalid amount. Please enter a positive value.");
        }
    }

    // Method to withdraw money from the account
    public void withdraw(double amount) {
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            System.out.println("₹" + amount + " has been successfully withdrawn.");
        } else if (amount > balance) {
            System.out.println("Insufficient funds. Your current balance is ₹" + balance);
        } else {
            System.out.println("Invalid amount. Please enter a positive value.");
        }
    }

    // Method to check the current balance
    public double getBalance() {
        return balance;
    }
}

// Class to represent the ATM
class ATM {
    private BankAccount account;

    // Constructor to associate the ATM with a bank account
    public ATM(BankAccount account) {
        this.account = account;
    }

    // Method to display the options available at the ATM
    public void showMenu() {
        System.out.println("\n**** ATM Menu ****");
        System.out.println("1. Check Balance");
        System.out.println("2. Deposit");
        System.out.println("3. Withdraw");
        System.out.println("4. Exit");
    }

    // Method to handle the user's choice
    public void performTransaction() {
        Scanner scanner = new Scanner(System.in);
        boolean keepRunning = true;

        while (keepRunning) {
            showMenu();
            System.out.print("Please choose an option: ");

            // Validate if the input is an integer
            if (!scanner.hasNextInt()) {
                System.out.println("Invalid input. Please enter a valid option.");
                scanner.next(); // Clear the invalid input
                continue;
            }

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    checkBalance();
                    break;
                case 2:
                    System.out.print("Enter amount to deposit: ₹");
                    double depositAmount = scanner.nextDouble();
                    deposit(depositAmount);
                    break;
                case 3:
                    System.out.print("Enter amount to withdraw: ₹");
                    double withdrawAmount = scanner.nextDouble();
                    withdraw(withdrawAmount);
                    break;
                case 4:
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    keepRunning = false;
                    break;
                default:
                    System.out.println("Invalid option. Please select a valid option from the menu.");
            }
        }

        scanner.close(); // Close the scanner when done
    }

    // Method to withdraw money using the BankAccount object
    public void withdraw(double amount) {
        account.withdraw(amount);
    }

    // Method to deposit money using the BankAccount object
    public void deposit(double amount) {
        account.deposit(amount);
    }

    // Method to check the balance using the BankAccount object
    public void checkBalance() {
        System.out.println("Your current balance is ₹" + account.getBalance());
    }
}

// Main class to run the ATM program
public class MainATM {
    public static void main(String[] args) {
        // Initialize the user's bank account with an initial balance
        BankAccount userAccount = new BankAccount(10000); // Starting balance ₹10,000

        // Create the ATM and associate it with the user's bank account
        ATM atm = new ATM(userAccount);

        // Start the ATM transaction process
        atm.performTransaction();
    }
}
